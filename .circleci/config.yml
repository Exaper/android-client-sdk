version: 2.0

jobs:
  build:
    docker:
      - image: reactnativecommunity/react-native-android:2019-9-4
    working_directory: ~/launchdarkly/android-client-sdk-private
    resource_class: large
    environment:
      - QEMU_AUDIO_DRV: none
      - _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xms2048m -Xmx4096m"
      - GRADLE_OPTS: "-Dorg.gradle.daemon=false"
      - JVM_OPTS: -Xmx3200m
      - CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      - CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      - BUILD_THREADS: 2

    steps:
      - checkout
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - run: mkdir -p $CIRCLE_TEST_REPORTS
      - run: apt-get update
      - run: apt-get -y -qq install awscli libpulse0
      - run: mkdir -p /usr/local/android-sdk-linux/licenses
      - run: sdkmanager "system-images;android-19;google_apis;armeabi-v7a"
      - run: |
          set +o pipefail
          yes | sdkmanager --licenses

      - run: unset ANDROID_NDK_HOME

      - run:
          name: Creating emulator
          command: echo no | avdmanager create avd -n ci-android-avd -f -k "system-images;android-19;google_apis;armeabi-v7a"
      - run:
          name: Running emulator
          command: emulator -avd ci-android-avd -netdelay none -netspeed full -no-audio -no-window -no-snapshot
          background: true
          timeout: 1200
          no_output_timeout: 2h

      - run:
          name: Building SDK
          command: ./gradlew :launchdarkly-android-client-sdk:assembleDebug --console=plain -PdisablePreDex

      - run:
          name: Wait for emulator to be ready
          command: .circleci/scripts/wait_for_emulator.sh
      - run:
          name: Run Tests
          command: ./gradlew :launchdarkly-android-client-sdk:connectedAndroidTest --console=plain -PdisablePreDex
          no_output_timeout: 2h

      - run: ./gradlew packageRelease --console=plain -PdisablePreDex

      - run:
          name: Save test results
          command: |
                mkdir -p ~/tests/test-results
                find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/tests/test-results/ \;
          when: always
      - store_test_results:
            path: ~/tests
      - store_artifacts:
            path: ~/tests
